public class DepthFirstMazeGenerator implements IMazeGenerator {
    // The Maze that this generator has produced
    private Maze M;
    // Defines a variable to track whether a maze has been generated yet
    private boolean Generated;

    /**
     * Defines the constructor for a DepthFirstMazeGenerator
     * @param Width  The Width of the Maze to be generated
     * @param Height The Height of the Maze to be generated
     */
    public DepthFirstMazeGenerator(int Width, int Height) {
        // Initialise a new Maze
        this.M = new Maze(Width, Height);
        this.Generated = false;
    }

    /**
     * Defines a method that constructs a maze through the use of a Depth First search
     * on an empty maze, creating a random one
     * @return Returns the Maze it created
     */
    public Maze GenerateMaze() {


        this.Generated = true;
        return this.M;
    }

    /**
     * Defines a method to get the maze from this object after it has been created for the first time
     * @return Returns a maze object created by a Depth First search
     */
    public Maze GetMaze() {
        // If a maze has not yet been generated by this Generator, return a newly generated one
        if (!this.Generated) {
            return GenerateMaze();
        }

        // Return the last one we generated
        return this.M;
    }
}
